/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 Thomas Vanmellaerts, 2018 Hugo Dupanloup (Yeregorix)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.thomas15v.noxray.config;

import com.thomas15v.noxray.NoXrayPlugin;
import com.thomas15v.noxray.api.BlockModifier;
import com.thomas15v.noxray.modifier.ModifierRegistry;
import ninja.leaping.configurate.objectmapping.Setting;
import ninja.leaping.configurate.objectmapping.serialize.ConfigSerializable;

@ConfigSerializable
public class NoXrayConfig {
	public static final String USE_ORE_DICT_COMMENT = "In case forge is detected, use the forgedict to add extra ores";
	public static final String MODIFIER_COMMENT = "Different modifiers are obvious and random";
	public static final String DENSITY_COMMENT = "Density of ores generated by the random modifier, between 0 and 1";
	@Setting(value = "UseOreDict", comment = USE_ORE_DICT_COMMENT)
	private boolean useOreDict = true;
	@Setting(value = "Modifier", comment = MODIFIER_COMMENT)
	private String modifier = "obvious";
	@Setting(value = "Density", comment = DENSITY_COMMENT)
	private float density = 0.5f;

	public boolean useOreDict() {
		return this.useOreDict;
	}

	public BlockModifier getModifier() {
		if (ModifierRegistry.contains(this.modifier)) {
			NoXrayPlugin.LOGGER.info("Using modifier: " + this.modifier.toLowerCase());
			return ModifierRegistry.get(this.modifier);
		} else {
			if (!this.modifier.toLowerCase().equals("empty"))
				NoXrayPlugin.LOGGER.warn("Modifier " + this.modifier.toLowerCase() + " is not valid, using empty modifier");
			return BlockModifier.EMPTY;
		}
	}

	public float getDensity() {
		return this.density;
	}
}